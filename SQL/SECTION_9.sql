-- SECTION 9
--THE MAGIC OF AGGREGATION
DROP DATABASE IF EXISTS book_shop3;
CREATE DATABASE book_shop3;
USE book_shop3; 
CREATE TABLE books 
	(
		book_id INT NOT NULL AUTO_INCREMENT,
		title VARCHAR(100),
		author_fname VARCHAR(100),
		author_lname VARCHAR(100),
		released_year INT,
		stock_quantity INT,
		pages INT,
		PRIMARY KEY(book_id)
	);
INSERT INTO BOOKS (TITLE, AUTHOR_FNAME, AUTHOR_LNAME, RELEASED_YEAR, STOCK_QUANTITY, PAGES)
  VALUES('The Namesake', 'Jhumpa', 'Lahiri', 2003, 32, 291),
		('Norse Mythology', 'Neil', 'Gaiman',2016, 43, 304),
		('American Gods', 'Neil', 'Gaiman', 2001, 12, 465),
		('Interpreter of Maladies', 'Jhumpa', 'Lahiri', 1996, 97, 198),
		('A Hologram for the King: A Novel', 'Dave', 'Eggers', 2012, 154, 352),
		('The Circle', 'Dave', 'Eggers', 2013, 26, 504),
		('The Amazing Adventures of Kavalier & Clay', 'Michael', 'Chabon', 2000, 68, 634),
		('Just Kids', 'Patti', 'Smith', 2010, 55, 304),
		('A Heartbreaking Work of Staggering Genius', 'Dave', 'Eggers', 2001, 104, 437),
		('Coraline', 'Neil', 'Gaiman', 2003, 100, 208),
		('What We Talk About When We Talk About Love: Stories', 'Raymond', 'Carver', 1981, 23, 176),
		("Where I'm Calling From: Selected Stories", 'Raymond', 'Carver', 1989, 12, 526),
		('White Noise', 'Don', 'DeLillo', 1985, 49, 320),
		('Cannery Row', 'John', 'Steinbeck', 1945, 95, 181),
		('Oblivion: Stories', 'David', 'Foster Wallace', 2004, 172, 329),
		('Consider the Lobster', 'David', 'Foster Wallace', 2005, 92, 343),
		('10% Happier', 'Dan', 'Harris', 2014, 29, 256), 
        ('fake_book', 'Freida', 'Harris', 2001, 287, 428),
        ('Lincoln In The Bardo', 'George', 'Saunders', 2017, 1000, 367);

	--1.COUNT()
	SELECT COUNT(TITLE) AS COUNT FROM BOOKS;
		--1.How many author_fnames?
		SELECT COUNT(AUTHOR_FNAME) AS FIRSTNAMES FROM BOOKS;
		--2.How many DISTINCT AUTHOR_FNAMES?
		-- SELECT DISTINCT COUNT(STOCK_QUANTITY) AS STOCK_QUANTITY FROM BOOKS; ITS NOT WORKS
		--DISTINCT FRO ONLY ONE ATTRIBUTE
		SELECT COUNT(DISTINCT AUTHOR_FNAMES) AS AUTHOR_FNAMES FROM BOOKS;
		--3.How many titles contain "the"?
		SELECT COUNT(TITLE) AS TITLE FROM BOOKS WHERE TITLE LIKE "%THE%";
	--2.GROUP BY
	--DEF: GROUP BY summarizes or aggregates identical data into single rows
	SELECT TITLE, AUTHOR_LNAME FROM BOOKS;
	SELECT TITLE, AUTHOR_LNAME FROM BOOKS GROUP BY AUTHOR_LNAME;

-- ASSIGNMENT - 1
	--1.COUNT how many books each author has written
	SELECT CONCAT(AUTHOR_FNAME," ",AUTHOR_LNAME) AS NAME,
		COUNT(CONCAT(AUTHOR_FNAME,AUTHOR_LNAME)) AS NUMBER_OF_BOOKS FROM BOOKS 
		GROUP BY (CONCAT(AUTHOR_FNAME,AUTHOR_LNAME));

	--3.MIN AND MAX (WITHOUT GROUP BY)
		--1.FIND THE MINIMUM RELEASED_YEAR
		SELECT MIN(RELEASED_YEAR) FROM BOOKS;
		--2.FIND THE LONGEST BOOK
		SELECT MAX(PAGES) FROM BOOKS;
		--3.WHAT IF I WANT THE TITLE OF THE LONGEST BOOK?
		SELECT TITLE,MAX(PAGES) FROM BOOKS; --OR
		SELECT * FROM BOOKS WHERE PAGES=(SELECT MAX(PAGES) FROM BOOKS); --OR
		SELECT * FROM BOOKS ORDER BY PAGES LIMIT 1;
	-- 3.MIN AND MAX (WITH GROUP BY)
		--1.FIND THE YEAR EACH AUTHOR PUBLISHED THEIR FIRST BOOK
		SELECT AUTHOR_FNAME,AUTHOR_LNAME,MIN(RELEASED_YEAR) FROM BOOKS
			GROUP BY AUTHOR_FNAME,AUTHOR_LNAME;
		--2.FIND THE LONGEST PAGE COUNT FOR EACH AUTHOR
		SELECT AUTHOR_FNAME,AUTHOR_LNAME,MAX(PAGES) FROM BOOKS
			GROUP BY AUTHOR_FNAME,AUTHOR_LNAME;
		
	--4.SUM
		--SUM ALL PAGES IN THE ENTIRE DATABASE
		SELECT SUM(PAGES) FROM BOOKS;
		-- SUM + GROUP BY
		--1.SUM ALL PAGES EACH AUTHOR HAS WRITTEN
		SELECT AUTHOR_FNAME,AUTHOR_LNAME,SUM(PAGES) FROM BOOKS
			GROUP BY AUTHOR_FNAME,AUTHOR_LNAME;
	--5.AVG
		--CALCULATE THE AVERAGE RELEASED_YEAR ACROSS ALL BOOKS
		SELECT AVG(RELEASED_YEAR) FROM BOOKS;
		--CALCULATE THE AVERAGE STOCK QUANTITY FOR BOOKS RELEASED IN THE SAME YEAR
		SELECT RELEASED_YEAR,AVG(STOCK_QUANTITY) FROM BOOKS
			GROUP BY RELEASED_YEAR;
-- ASSIGNMENT - 2
	--1.PRINT THE NUMBER OF BOOKS IN THE DATABASE
	SELECT COUNT(TITLE) FROM BOOKS;
	--2.PRINT OUT HOW MANY BOOKS WERE RELEASED IN EACH YEAR
	SELECT TITLE,COUNT(RELEASED_YEAR) FROM BOOKS 
		GROUP BY RELEASED_YEAR;
	--3.PRINT OUT THE TOTAL NUMBER OF BOOKS IN STOCK
	SELECT SUM(STOCK_QUANTITY) FROM BOOKS;
	--4.FIND THE AVERAGE RELEASED_YEAR FOR EACH AUTHOR
	SELECT AUTHOR_FNAME,AUTHOR_LNAME,AVG(RELEASED_YEAR) FROM BOOKS
		GROUP BY AUTHOR_FNAME,AUTHOR_LNAME;
	--5.FIND THE FULL NAME OF THE AUTHOR WHO WROTE THE LONGEST BOOK	
	SELECT CONCAT(AUTHOR_FNAME," ",AUTHOR_LNAME),MAX(PAGES) FROM BOOKS;
	/*6.
		+------+---------+-----------+
		| YEAR | # BOOKS | AVG PAGES |
		+------+---------+-----------+
		| 1945 |       1 |  181.0000 |
		| 1981 |       1 |  176.0000 |
		| 1985 |       1 |  320.0000 |
		| 1989 |       1 |  526.0000 |
		| 1996 |       1 |  198.0000 |
		| 2000 |       1 |  634.0000 |
		| 2001 |       3 |  443.3333 |
		| 2003 |       2 |  249.5000 |
		| 2004 |       1 |  329.0000 |
		| 2005 |       1 |  343.0000 |
		| 2010 |       1 |  304.0000 |
		| 2012 |       1 |  352.0000 |
		| 2013 |       1 |  504.0000 |
		| 2014 |       1 |  256.0000 |
		| 2016 |       1 |  304.0000 |
		| 2017 |       1 |  367.0000 |
		+------+---------+-----------+
	*/
	SELECT RELEASED_YEAR AS YEARS,
			COUNT(TITLE) AS BOOKS,
			AVG(PAGES) AS "AVG PAGES" FROM BOOKS
			GROUP BY RELEASED_YEAR;